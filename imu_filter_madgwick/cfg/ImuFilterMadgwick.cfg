#! /usr/bin/env python
# IMU Filter dynamic reconfigure

PACKAGE='imu_filter_madgwick'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# gain: controls the weight of the correction from the accelerometer/magnetometer relative to the gyroscope input.
#       A low gain will 'trust' the gyroscope more and so be more susceptible to drift.
#       A high gain will decrease the drift (~> increase convergence) but increase the influence of other sensors and
#       the errors that result from accelerations and magnetic distortions (as the algorithm assumes accelerometer/magnetometer reading measure only the gravity/magnetic field).
#       Thus, during fast motion, such errors will cause the filter to have wrong results. The gain must be chosen low enough to minimize these errors, while still "overcoming" the gyroscope drift error.
#       The paper also suggests using a dynamic gain which is reduced during periods of high accelerations.

gen.add("gain", double_t, 0, "Gain of the filter. Higher values lead to faster convergence but more noise. Lower values lead to slower convergence but smoother signal.", 0.1, 0.0, 1.0)
gen.add("zeta", double_t, 0, "Gyro drift gain (approx. rad/s).", 0, -1.0, 1.0)
gen.add("mag_bias_x", double_t, 0, "Magnetometer bias (hard iron correction), x component.", 0, -10.0, 10.0)
gen.add("mag_bias_y", double_t, 0, "Magnetometer bias (hard iron correction), y component.", 0, -10.0, 10.0)
gen.add("mag_bias_z", double_t, 0, "Magnetometer bias (hard iron correction), z component.", 0, -10.0, 10.0)
gen.add("orientation_stddev", double_t, 0, "Standard deviation of the orientation estimate.", 0, 0, 100.0)

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "ImuFilterMadgwick"))
